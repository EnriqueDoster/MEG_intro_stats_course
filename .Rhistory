amr <- read.table('data/test_AMR_analytic_matrix.csv', header=T, row.names=1, sep=',')
# View structure of the data
str(amr)
# View the entire count table
View(amr)
# What samples did we analyze and which genes were identified?
colnames(amr)
row.names(amr)
# Notice that the AMR gene names contain information about each gene accession regarding which drug class it confers resistance to,
# the mechanism is employs to confer resistance, and the gene's group.
# MEGARes has a seperate annotation file that contains this information as well and facilitates the aggregation of counts.
# For example, we might want to sum all counts to gene accessions that confer resistance to Tetracycline drugs. We'll explore
# this further in Lesson 2.
annotations <- read.table('data/megares_full_annotations_v2.00.csv', header=T, row.names=1, sep=',')
# Notice that the AMR gene names contain information about each gene accession regarding which drug class it confers resistance to,
# the mechanism is employs to confer resistance, and the gene's group.
# MEGARes has a seperate annotation file that contains this information as well and facilitates the aggregation of counts.
# For example, we might want to sum all counts to gene accessions that confer resistance to Tetracycline drugs. We'll explore
# this further in Lesson 2.
annotations <- read.table('data/megares_full_annotations_v2.0.csv', header=T, row.names=1, sep=',')
annotations
# What samples did we analyze and which genes were identified?
colnames(amr)
# Let's see the first 10 lines of the file
head(amr)
# Let's see the first 10 lines of the file
head(amr)[1]
# Let's see the first 10 lines of the file
str(head(amr))
# Notice that the AMR gene names contain information about each gene accession regarding which drug class it confers resistance to,
# the mechanism is employs to confer resistance, and the gene's group.
# MEGARes has a seperate annotation file that contains this information as well and facilitates the aggregation of counts.
# For example, we might want to sum all counts to gene accessions that confer resistance to Tetracycline drugs. We'll explore
# this further in Lesson 2.
annotations <- read.table('data/megares_full_annotations_v2.0.csv', header=T, row.names=1, sep=',')
# View annotations files
gather(annotations)
library(tidyr)
# View annotations files
gather(annotations)
# View annotations files
spread(annotations)
annotations
# View annotations files
spread(annotations, header)
annotations
# View annotations files
spread(annotations, class)
# View annotations files
spread(annotations, "class")
# View the entire count table
View(amr)
amr["CF24_S72_L008"]
amr[CF24_S72_L008]
type(amr)
typ(amr)
# Get all the row names for the amr object and place it in a new object called "amr_headers"
amr_headers <- row.names(amr)
amr_headers
# Try
annotations["amr_headers"]
# Try
annotations[amr_headers]
# Try
annotations[amr_headers,]
# Try
subset_annotations <- annotations[amr_headers,]
View(subset_annotations)
annotations
length(amr)
# How many genes were identified?
length(row.names(amr))
# Explore the annotation object, which column matches the rows in the amr object?
annotations[1]
subset_annotations
# Now, we we can use the "subset_annotations" object and see how many unique AMR classes and mechanisms we found
subset_annotations$class
# Now, we we can use the "subset_annotations" object and see how many unique AMR classes and mechanisms we found
unique(subset_annotations$class)
# Now, we we can use the "subset_annotations" object and see how many unique AMR classes and mechanisms we found
length(unique(subset_annotations$class))
# This is because
str(subset_annotations)
# This is because the "class" column is a factor and it maintaned all of the different values obseved in the annotations file
# Check the structure of "annotations" and"subset_annotations"
str(subset_annotations)
str(subset_annotations)
# We can then use "length" to count the number of unique values
length(unique(subset_annotations$class))
# Notice that the output is numbered in brackets, but it seems different than the amount of "Levels" reported
unique(subset_annotations$class)
# We can then use "length" to count the number of unique values
length(unique(subset_annotations$class))
# This happens because the "class" column is a factor and it maintaned all of the different values obseved in the annotations file
# Check the structure of "annotations" and"subset_annotations"
str(annotations)
str(subset_annotations)
# This might seem like a pointless thing to bring up, but it can cause issues with other R functions that use factors
# Simple remove the extra factors like this:
droplevels(subset_annotations)
# This might seem like a pointless thing to bring up, but it can cause issues with other R functions that use factors
# Simple remove the extra factors like this:
subset_annotations <- droplevels(subset_annotations)
str(subset_annotations)
# Now, how many unique mechanisms did we identify in our data?
length(unique(subset_annotations$mechanism))
# Now, how many unique mechanisms did we identify in our data?
length(unique(subset_annotations$mechanism))
# We''ll use an R command, read.table(), to read in the data, but we need to know a few things about the file.
# Please notice that the file has:
# column names "header=T", the first column has names for each of rows "row.names=1", and it is a comma seperated file "sep=','
amr <- read.table('./data/test_AMR_analytic_matrix.csv', header=T, row.names=1, sep=',')
# We''ll use an R command, read.table(), to read in the data, but we need to know a few things about the file.
# Please notice that the file has:
# column names "header=T", the first column has names for each of rows "row.names=1", and it is a comma seperated file "sep=','
amr <- read.table('data/test_AMR_analytic_matrix.csv', header=T, row.names=1, sep=',')
# We''ll use an R command, read.table(), to read in the data, but we need to know a few things about the file.
# Please notice that the file has:
# column names "header=T", the first column has names for each of rows "row.names=1", and it is a comma seperated file "sep=','
amr <- read.table('./data/AMR_analytic_matrix.csv', header=T, row.names=1, sep=',')
amr
